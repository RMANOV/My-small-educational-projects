1. Class Forecaster - main class - manages the whole process of forecasting, checking and correcting
    1.1 check if the sheet name is EVROPA or PICCADYLLY or CARREFOUR or PENNY or SUM - starting from METRO - if it is not then continue, but if it is then skip the sheet
    1.2 check if the value in row 5, column 113 is not 0 - if it is 0 then skip the row, but if it is not 0 then continue
2. Class ColorChecker - checks the color of the forecasted weeks and for the last 5 weeks
    2.1 check if the color of the forecasted weeks is not 36 or 39 - if it is not then continue to column 107, but if it is then stop before the colored cell
    2.2 check if the color of the last 5 weeks is not 36 or 39 - if it is not then continue, but if it is then stop before the colored cell
    2.3 result1 - one-row range of the forecasted weeks
    2.4 result2 - one-row range of the last 5 weeks
3. Class ZeroValueChecker - checks if there are any zero values in the past weeks
    3.1 check if the value in the past week is 0 - if it is 0 then replace it with 1 - only for calculations, but if it is not 0 then continue
    3.2 check if the value 2 weeks ago is 0 - if it is 0 then replace all forecasted values with 3, but if it is not 0 then continue
    3.3 check if the value in 3 weeks ago is 0 - if it is 0 then replace all forecasted values with 3, but if it is not 0 then continue
    3.4 if there is 3 weeks ago a 0 value then the value in 4 weeks ago is also 0, so replace all forecasted values with 0.
4. Class Corrector - corrects the forecasted weeks
    4.1 from values of result1 calculate the weighted average value
    4.2 from values of result2 calculate the linear trend - the slope of the line
    4.3 calculate the value of the forecasted week 1
    4.4 calculate the weighted average of the old forecasts
    4.5 compare the value of the forecasted week 1 with the weighted average of the old forecasts - if the difference is positive - adjust the value of the forecasted week 1, but if the difference is negative - continue
    4.6 calculate correcting index - the division between the value of the forecasted week 1 and the weighted average of the old forecasts - if the value of the forecasted week 1 is 0 then the correcting index is 1, if the index is not between 0.3 -1.3 then adjust it to 0.3 or 1.3 and color all range in yellow.
    4.7 correct the values of the forecasted weeks - multiply the values of the forecasted weeks with the correcting index
5. Class CorrectorDecember - corrects the forecasted weeks for December
    5.1 check if the sheet name is EVROPA or PICCADYLLY or CARREFOUR or PENNY or SUM - starting from METRO - if it is not then continue, but if it is then skip the sheet
    5.2 check if the value in column 113 is not 0 - if it is 0 then skip the row, but if it is not 0 then continue
    5.3 check if the value in column 125 is between 0.9 and 1.001 - if it is not then continue, but if it is then skip the row
    5.4 check if any of the cells in the range 51-55 are not colored with color 36 or 39 - if they are not then continue, but if they are then skip the row
    5.5 check if any of the cells in the range 108-112 are not colored with color 36 or 39 - if they are not then continue, but if they are then skip the row
    5.6 if all of the above is true then multiply the values in the range 108-112 with the value in column 125 until the value in column 125 is between 0.9 and 1.001
    5.7 Select cell 108
    5.8 Resize the selection to 5 columns to 112
    5.9 Multiply the values in the selection with the value in cell 125
    5.10 check if the value in cell 125 is between 0.9 and 1.001 - if not - copy again the new value of cell 125 and repeat the multiplication cycle
    5.11 value in cell 125 is decreased by every multiplication, so after every multiplication cycle the value in column 125 needs to be checked again and if it is not between 0.9 and 1.001 then the multiplication cycle is repeated
6. Class FirstGreen - check in which column is currently the first green cell - and saves the number of columns
7. Class ActiveCellPosition - check in which row and column is currently the active cell - and save the number of rows and columns